{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toDateString","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","toString","SignIn","email","password","handleSubmit","e","preventDefault","_this","signIn","handleChange","setState","Object","defineProperty","target","value","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.197fa7ad.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signOut} from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    \n    return(\n        <ul className=\"right\">\n            <li>\n                <NavLink to='/create'>New Project</NavLink>\n            </li>\n            <li>\n                <a onClick={props.signOut}>Log Out</a>\n            </li>\n            <li>\n                <NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink>\n            </li>\n\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) =>{\n    return(dispatch,getState,{getFirebase}) =>{\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() =>{\n            dispatch({type:'LOGIN_SUCCESS'})\n        }).catch((err)=>{\n            dispatch({type:'LOGIN_ERR',err})\n        });\n    }\n}\n\nexport const signOut = () =>{\n    return(dispatch,getState,{getFirebase}) =>{\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() =>{\n            dispatch({type:'SIGNOUT_SUCCESS'});\n        });\n    }\n}\n\nexport const signUp = (newUser) =>{\n    return(dispatch,getState,{getFirebase,getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName:newUser.firstName,\n                lastName:newUser.lastName,\n                initials:newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() =>{\n            dispatch({type:'SIGNUP_SUCCESS'})\n        }).catch((err) =>{\n            dispatch({type:'SIGNUP_ERROR',err})\n        })\n    }\n}","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\n\nconst SignedOutLinks = () => {\n    return(\n        <ul className=\"right\">\n            <li>\n                <NavLink to='/signup'>Sign Up</NavLink>\n            </li>\n            <li>\n                <NavLink to='/signin'>Login</NavLink>\n            </li>\n            \n\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport {connect} from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth,profile } = props\n    //console.log(auth)\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">Project Plan</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    //console.log(state)\n    return{\n        auth:state.firebase.auth,\n        profile:state.firebase.profile\n    }//try console logging state to understand everything\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) =>{\n    const  {notifications} = props;\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item =>{\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        }) }\n                    </ul>\n                </div>\n            </div>    \n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\n\n\nconst ProjectSummary = ({project})=>{\n    return(\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{project.createdAt.toDate().toDateString()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport {Link} from 'react-router-dom'\n\nconst ProjectList = ({projects}) =>{\n    return(\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={'/project/'+project.id} key={project.id}>\n                        <ProjectSummary project={project}/>\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}//key should always be attatched to the parent tag do therefore key is attatched to Link\n\nexport default ProjectList","import React,{ Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport {Redirect} from 'react-router-dom'\n\n\nclass Dashboard extends Component{\n    render(){\n        const {projects,auth,notifications} = this.props\n        if(!auth.uid) return <Redirect to='/signin'/>\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m6\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return{\n        projects:state.firestore.ordered.projects,\n        auth:state.firebase.auth,\n        notifications:state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection:'projects',orderBy:['createdAt','desc'] },\n        { collection:'notifications',limit:3,orderBy:['time','desc'] }//limit the notifications to 3\n    ])//takes in an array and tells which collection to connect to\n)(Dashboard)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose } from 'redux'\nimport {Redirect} from 'react-router-dom'\n\nconst ProjectDetails = (props)=>{   \n    const {project,auth} = props\n    if(!auth.uid) return <Redirect to='/signin'/>\n\n    if(project){\n        return(\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">\n                            {project.title}\n                        </span>\n                        <p>{project.content}</p>\n        \n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div> \n                        <div>{project.createdAt.toDate().toString()}</div>\n                    </div>\n                </div>\n            </div>\n        )  \n    }\n    else{\n        return(\n            <div className=\"container center\">\n                <p>loading project..</p>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state,ownProps) => {\n    console.log(state)\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id]:null\n    return{\n        project:project,\n        auth:state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection:'projects'}\n    ])\n)(ProjectDetails)","import React,{Component} from 'react'\nimport {connect} from 'react-redux'\nimport {signIn} from '../../store/actions/authActions'\nimport {Redirect} from 'react-router-dom'\n\n\nclass SignIn extends Component{\n    state = {\n        email:'',\n        password:''\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();//to prevent default behaviour ie refreshing the page when submit is pressed\n        this.props.signIn(this.state);\n    }\n    handleChange =(e) =>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n    render(){\n        const { authError,auth } = this.props \n        if(auth.uid) return <Redirect to='/ '/>\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>Login Failed</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        authError:state.auth.authError,//cause in the root reducer auth has authReducer and in auth reducer authError\n        auth:state.firebase.auth\n    }\n}\n\n//to connect actions to the props so we can access it in the component\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        signIn:(creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)","import React,{Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport {signUp} from '../../store/actions/authActions'\n\n\nclass SignUp extends Component{\n    state = {\n        email:'',\n        password:'',\n        firstName:'',\n        lastName:''\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault()//to prevent default behaviour ie refreshing the page when submit is pressed\n        this.props.signUp(this.state)\n    }\n    handleChange =(e) =>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n    render(){\n        const {auth,authError} = this.props\n        if(auth.uid) return <Redirect to='/'/>\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        auth:state.firebase.auth,\n        authError:state.auth.authError\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React,{Component} from 'react'\nimport {createProject} from '../../store/actions/projectActions'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\n\n\nclass CreateProject extends Component{\n    state = {\n        title:'',\n        content:''\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault()//to prevent default behaviour ie refreshing the page when submit is pressed\n        //console.log(this.state)\n        this.props.createProject(this.state)\n        this.props.history.push('/')//to redirect to the home page after creating a project\n    }\n    handleChange =(e) =>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n    render(){\n        const {auth} = this.props\n        if(!auth.uid) return <Redirect to='/signin'/>\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        auth:state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        createProject:(project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)","export const createProject = (project) =>{\n    return (dispatch,getState,{getFirebase,getFirestore}) => {\n        //make async call to the database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName:profile.firstName,\n            authorLastName:profile.lastName,\n            authorId:authorId,\n            createdAt:new Date()\n        }).then(() => {\n            dispatch({type:'CREATE_PROJECT',project});\n        }).catch((err) => {\n            dispatch({type:'CREATE_PROJECT_ERROR',err});\n        })\n        \n    }//can return function as we are using thunk\n};","import React from 'react'\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError:null\n}\n\nconst authReducer = (state=initState,action) =>{\n    switch(action.type){\n        case 'LOGIN_ERR':\n            console.log('login error');\n            return {\n                ...state,\n                authError:'login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return{\n                ...state,\n                authError:null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return{\n                ...state,\n                authError:null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return{\n                ...state,\n                authError:action.err.message\n            }\n        default:\n         return state;\n    }\n}\n\nexport default authReducer","const initState = {\n    projects:[\n        {id:'1',title:'reha',content:'blah blah blah'},\n        {id:'2',title:'nitin',content:'blah blah blah'},\n        {id:'3',title:'sangeeta',content:'blah blah blah'}\n    ]\n}\n\nconst projectReducer = (state=initState,action) =>{\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project',action.project);\n            return state;\n        case 'CREATE_PROJECT_ERR':\n            console.log('create project err',action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport {combineReducers} from 'redux'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\n\nconst rootReducer = combineReducers({\n    auth:authReducer,\n    project:projectReducer,\n    firestore:firestoreReducer, //retrieves the data in the firestore for us\n    firebase:firebaseReducer//for auth  \n})\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyCQ8fdkJh4QdJAQDZiWIJ8gDYZdwPElbug\",\n    authDomain: \"marioplan-ae6b6.firebaseapp.com\",\n    databaseURL: \"https://marioplan-ae6b6.firebaseio.com\",\n    projectId: \"marioplan-ae6b6\",\n    storageBucket: \"marioplan-ae6b6.appspot.com\",\n    messagingSenderId: \"495213754177\"\n  };\n\n \nfirebase.initializeApp(config);\nfirebase.firestore().settings({timestampsInSnapshots:true});//to initialize the firestore\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore,getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase,getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig,{useFirestoreForProfile:true, userProfile:'users', attachAuthIsReady:true})//allows to access a property on store called firebaseAuthIsReady \n    )    \n);//to create a store..thunk is used so that we can return a functions in our actions\n//reduxFirestore and reactReduxFirestore connect the config files so getFirebase and getFirestore\n//know what to connect to...compose is used to compose more than one store enhancers\n\n\n\nstore.firebaseAuthIsReady.then(() =>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n//this is done so that the page is loaded after the firebase auth is ready\n\n"],"sourceRoot":""}